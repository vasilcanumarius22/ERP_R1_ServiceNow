<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Vehicles</name>
        <operation_script><![CDATA[/*
API:            Vehicles
Name:           Get Vehicles
HTTP Method:    GET
Relative path:  /vehicles
Description:    Returns data for selected vehicles.
*/

(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // Declare empty array for answer
    var answer = [];

    // Get values from the respective query parameters.
    var make = request.queryParams.make;
    var model = request.queryParams.model;
    var year = request.queryParams.year;
    var country = request.queryParams.country;
    var city = request.queryParams.city;

    // Generate 404 if no query parameters provided.
    if (!make && !model && !year && !country && !city) {
        response.setError(new sn_ws_err.NotFoundError('No query parameters defined.'));
        response.setStatus(404);
        return;
    }

    // Query the Vehicle table using these parameters.
    var vehicleTable = 'x_1344554_erp_ve_0_vehicle';
    var vehicleGr = new GlideRecordSecure(vehicleTable);
    if (make) { vehicleGr.addQuery('make', make); }
    // In v2, the model query parameter accepts encoded queries. For example:
    // model=XC90
    // modelLIKEXC
    // modelINXC90,XC60
    if (model) { vehicleGr.addQuery(model); }
    if (year) { vehicleGr.addQuery('year', year); }
    if (country) { vehicleGr.addQuery('country', country); }
    if (city) { vehicleGr.addQuery('city', city); }
    vehicleGr.query();


    // Generate a 404 if no vehicles were found.
    if (!vehicleGr.hasNext()) {
        response.setError(new sn_ws_err.NotFoundError('No records found.'));
        response.setStatus(404);
        return;
    }

    // For the vehicles found, generate a JSON object and save the vehicle data in it.
    while (vehicleGr.next()) {

        var vehicleObj = {
            "make": vehicleGr.getValue('make'),
            "model": vehicleGr.getValue('model'),
            "vin": vehicleGr.getValue('vin'),
            "year": parseInt(vehicleGr.getValue('year'), 10),
            "country": vehicleGr.getValue('country'),
            "city": vehicleGr.getValue('city'),
            "start_date": vehicleGr.getValue('start_date'),
            "end_date": vehicleGr.getValue('end_date'),
        };
        answer.push(vehicleObj);
    }

    // Generate the response body.
    response.setBody(answer);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_1344554_erp_ve_0/vehicles_api/vehicles</operation_uri>
        <produces>application/json</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/vehicles</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-18 21:17:27</sys_created_on>
        <sys_id>9af2a011c3c586106be87addd401317e</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Get Vehicles</sys_name>
        <sys_package display_value="ERP_Vehicles_Final" source="x_1344554_erp_ve_0">3466c78dc38d46106be87addd4013191</sys_package>
        <sys_policy/>
        <sys_scope display_value="ERP_Vehicles_Final">3466c78dc38d46106be87addd4013191</sys_scope>
        <sys_update_name>sys_ws_operation_9af2a011c3c586106be87addd401317e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-18 21:30:06</sys_updated_on>
        <web_service_definition display_value="Vehicles API">10d75455c38586106be87addd401312d</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
